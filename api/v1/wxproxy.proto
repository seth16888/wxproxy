syntax = "proto3";

package api.wxproxy.v1;

import "google/api/annotations.proto";

option go_package = "github.com/seth16888/wxproxy/api/v1;v1";
option java_multiple_files = true;
option java_package = "api.v1";

service Mpproxy {
	rpc GetMaterialCount (AccessTokenParam) returns (GetMaterialCountReply) {
		option (google.api.http) = {
			get: "/mpproxy/v1/materials/count"
		};
	}

	rpc GetMaterialList (GetMaterialListRequest) returns (GetMaterialListReply) {
		option (google.api.http) = {
			get: "/mpproxy/v1/materials/list"
		};
	}

	rpc GetMemberList (GetMemberListRequest) returns (GetMemberListReply) {
		option (google.api.http) = {
			get: "/mpproxy/v1/members"
		};
	}
	rpc GetMemberInfo (GetMemberInfoRequest) returns (GetMemberInfoReply) {
		option (google.api.http) = {
			get: "/mpproxy/v1/members/info"
		};
	}
	rpc BatchGetMemberInfo (BatchGetMemberInfoRequest) returns (BatchGetMemberInfoReply) {
		option (google.api.http) = {
			post: "/mpproxy/v1/members/info/batchget"
			body: "*"
		};
	}
	rpc GetMemberTags (GetMemberTagsRequest) returns (GetMemberTagsReply) {
		option (google.api.http) = {
			get: "/mpproxy/v1/members/tags"
		};
	}
	rpc UpdateMemberRemark (UpdateMemberRemarkRequest) returns (WXErrorReply) {
		option (google.api.http) = {
			post: "/mpproxy/v1/members/remark"
			body: "*"
		};
	}
	rpc GetTagList (AccessTokenParam) returns (GetTagListReply) {
		option (google.api.http) = {
			get: "/mpproxy/v1/tags/list"
		};
	}
	rpc CreateTag (CreateTagRequest) returns (CreateTagReply) {
		option (google.api.http) = {
			post: "/mpproxy/v1/tags"
			body: "*"
		};
	}
	rpc UpdateTag (UpdateTagRequest) returns (WXErrorReply) {
		option (google.api.http) = {
			put: "/mpproxy/v1/tags/{Id}"
			body: "*"
		};
	}
	rpc DeleteTag (DeleteTagRequest) returns (WXErrorReply) {
		option (google.api.http) = {
			delete: "/mpproxy/v1/tags/{Id}"
		};
	}
	rpc GetTagMembers (GetTagMembersRequest) returns (GetTagMembersReply) {
		option (google.api.http) = {
			get: "/mpproxy/v1/tags/{Id}/members"
		};
	}
	rpc BatchTaggingMembers (BatchTaggingMembersRequest) returns (WXErrorReply) {
		option (google.api.http) = {
			post: "/mpproxy/v1/tags/{Id}/members"
			body: "*"
		};
	}
	rpc BatchUnTaggingMembers (BatchUnTaggingMembersRequest) returns (WXErrorReply) {
		option (google.api.http) = {
			post: "/mpproxy/v1/tags/{Id}/members/del"
			body: "*"
		};
	}
	rpc CreateTemporaryQRCode (CreateQRCodeRequest) returns (CreateQRCodeReply) {
		option (google.api.http) = {
			post: "/mpproxy/v1/qrcode/temporary"
			body: "*"
		};
	}
	rpc CreateLimitQRCode (CreateQRCodeRequest) returns (CreateQRCodeReply) {
		option (google.api.http) = {
			post: "/mpproxy/v1/qrcode/limit"
			body: "*"
		};
	}
	rpc GenShorten (GenShortenRequest) returns (GenShortenReply) {
		option (google.api.http) = {
			post: "/mpproxy/v1/shorten/gen"
			body: "*"
		};
	}
	rpc FetchShorten (FetchShortenRequest) returns (FetchShortenReply) {
		option (google.api.http) = {
			get: "/mpproxy/v1/shorten/fetch"
		};
	}
	rpc GetMenuInfo (AccessTokenParam) returns (MenuInfoReply) {
		option (google.api.http) = {
			get: "/mpproxy/v1/menu/info"
		};
	}
	rpc TryMatchMenu (TryMatchMenuRequest) returns (TryMatchMenuReply) {
		option (google.api.http) = {
			get: "/mpproxy/v1/menu/trymatch"
		};
	}
	rpc PullMenu (AccessTokenParam) returns (SelfMenuReply) {
		option (google.api.http) = {
			get: "/mpproxy/v1/menu/pull"
		};
	}
	rpc CreateMenu (CreateMenuRequest) returns (WXErrorReply) {
		option (google.api.http) = {
			post: "/mpproxy/v1/menu/create"
			body: "*"
		};
	}
	rpc CreateConditionalMenu (CreateMenuRequest) returns (WXErrorReply) {
		option (google.api.http) = {
			post: "/mpproxy/v1/menu/create_conditional"
			body: "*"
		};
	}
	rpc DeleteConditionalMenu (DeleteConditionalMenuRequest) returns (WXErrorReply) {
		option (google.api.http) = {
			delete: "/mpproxy/v1/menu/delete_conditional"
		};
	}
	rpc DeleteMenu (AccessTokenParam) returns (WXErrorReply) {
		option (google.api.http) = {
			delete: "/mpproxy/v1/menu/delete"
		};
	}
	rpc GetIndustry (AccessTokenParam) returns (GetIndustryReply) {
		option (google.api.http) = {
			get: "/mpproxy/v1/message/template/industry"
		};
	}
	rpc GetAllPrivateTpl (AccessTokenParam) returns (GetAllPrivateTplReply) {
		option (google.api.http) = {
			get: "/mpproxy/v1/message/template/allprivate"
		};
	}
	rpc SetIndustry (SetIndustryRequest) returns (WXErrorReply) {
		option (google.api.http) = {
			post: "/mpproxy/v1/message/template/industry"
			body: "*"
		};
	}
	rpc GetMessageTplId (AddTemplateRequest) returns (AddMessageTplReply) {
		option (google.api.http) = {
			post: "/mpproxy/v1/message/template/id"
			body: "*"
		};
	}
	rpc DeleteMessageTpl (DeleteMessageTplRequest) returns (WXErrorReply) {
		option (google.api.http) = {
			delete: "/mpproxy/v1/message/template/delete"
		};
	}
	rpc SendTplMsg (SendTplMsgRequest) returns (SendTplMsgReply) {
		option (google.api.http) = {
			post: "/mpproxy/v1/message/template/send"
			body: "*"
		};
	}
	rpc SendSubscribeMsg (SendSubscribeMsgRequest) returns (WXErrorReply) {
		option (google.api.http) = {
			post: "/mpproxy/v1/message/template/subscribe"
			body: "*"
		};
	}
	rpc GetBlockedTplMsg (GetBlockedTplRequest) returns (GetBlockedTplMsgReply) {
		option (google.api.http) = {
			post: "/mpproxy/v1/message/template/blocked"
			body: "*"
		};
	}
	rpc AddSubscribeTpl (AddSubscribeTplRequest) returns (AddSubscribeTplReply) {
		option (google.api.http) = {
			post: "/mpproxy/v1/message/subscribe/add_template"
			body: "*"
		};
	}
	rpc DelSubscribeTpl (DelSubscribeTplRequest) returns (WXErrorReply) {
		option (google.api.http) = {
			post: "/mpproxy/v1/message/subscribe/del_template"
			body: "*"
		};
	}
	rpc GetSubscribeCategory (AccessTokenParam) returns (GetSubscribeCategoryReply) {
		option (google.api.http) = {
			get: "/mpproxy/v1/message/subscribe/category"
		};
	}
	rpc GetSubscribeTplKeywords (GetSubscribeTplKeywordsRequest) returns (GetSubscribeTplKeywordsReply) {
		option (google.api.http) = {
			get: "/mpproxy/v1/message/subscribe/keywords"
		};
	}
	rpc GetSubscribeTplTitles (GetSubscribeTplTitlesRequest) returns (GetSubscribeTplTitlesReply) {
		option (google.api.http) = {
			get: "/mpproxy/v1/message/subscribe/titles"
		};
	}
	rpc GetSubscribePrivateTpl (AccessTokenParam) returns (GetSubscribePrivateTplReply) {
		option (google.api.http) = {
			get: "/mpproxy/v1/message/subscribe/private_tpl"
		};
	}
	rpc SendSubscribeMessage (SendSubscribeMessageRequest) returns (WXErrorReply) {
		option (google.api.http) = {
			post: "/mpproxy/v1/message/subscribe/send"
			body: "*"
		};
	}
	// 客服接口
	rpc GetKFList (AccessTokenParam) returns (GetKFListReply) {
		option (google.api.http) = {
			get: "/mpproxy/v1/kf/list"
		};
	}
	rpc GetKFOnlineList (AccessTokenParam) returns (GetKFOnlineListReply) {
		option (google.api.http) = {
			get: "/mpproxy/v1/kf/online"
		};
	}
	rpc GetKFMsgHistory (GetKFMsgHistoryRequest) returns (GetKFMsgHistoryReply) {
		option (google.api.http) = {
			post: "/mpproxy/v1/kf/message/history"
			body: "*"
		};
	}
	rpc AddKFAccount (AddKFAccountRequest) returns (WXErrorReply) {
		option (google.api.http) = {
			post: "/mpproxy/v1/kf/account/add"
			body: "*"
		};
	}
	rpc UpdateKFAccount (UpdateKFAccountRequest) returns (WXErrorReply) {
		option (google.api.http) = {
			post: "/mpproxy/v1/kf/account/update"
			body: "*"
		};
	}
	rpc DelKFAccount (DelKFAccountRequest) returns (WXErrorReply) {
		option (google.api.http) = {
			post: "/mpproxy/v1/kf/account/delete"
			body: "*"
		};
	}
	rpc InviteKFWorker (InviteKFWorkerRequest) returns (WXErrorReply) {
		option (google.api.http) = {
			post: "/mpproxy/v1/kf/account/invite"
			body: "*"
		};
	}
	rpc UpdateKFAvatar (UpdateKFAvatarRequest) returns (WXErrorReply) {
		option (google.api.http) = {
			post: "/mpproxy/v1/kf/account/avatar/update"
			body: "*"
		};
	}
	rpc UpdateKFTyping (UpdateKFTypingRequest) returns (WXErrorReply) {
		option (google.api.http) = {
			post: "/mpproxy/v1/kf/account/status/typing"
			body: "*"
		};
	}
	// 客服会话
	rpc GetKFSessionList (GetKFSessionListRequest) returns (GetKFSessionListReply) {
		option (google.api.http) = {
			get: "/mpproxy/v1/kf/session/list"
		};
	}
	rpc GetKFSessionStatus (GetKFSessionStatusRequest) returns (GetKFSessionStatusReply) {
		option (google.api.http) = {
			get: "/mpproxy/v1/kf/session/status"
		};
	}
	rpc GetKFSessionUnaccepted (AccessTokenParam) returns (GetKFSessionUnacceptedReply) {
		option (google.api.http) = {
			get: "/mpproxy/v1/kf/session/unaccepted"
		};
	}
	rpc CloseKFSession (CloseKFSessionRequest) returns (WXErrorReply) {
		option (google.api.http) = {
			post: "/mpproxy/v1/kf/session/close"
			body: "*"
		};
	}
	rpc NewKFSession (NewKFSessionRequest) returns (WXErrorReply) {
		option (google.api.http) = {
			post: "/mpproxy/v1/kf/session/create"
			body: "*"
		};
	}
	rpc SendKFTextMsg (SendKFTextMsgRequest) returns (WXErrorReply) {
		option (google.api.http) = {
			post: "/mpproxy/v1/kf/message/sendtext"
			body: "*"
		};
	}
	rpc SendKFImageMsg (SendKFImageMsgRequest) returns (WXErrorReply) {
		option (google.api.http) = {
			post: "/mpproxy/v1/kf/message/sendimage"
			body: "*"
		};
	}
	rpc SendKFVoiceMsg (SendKFVoiceMsgRequest) returns (WXErrorReply) {
		option (google.api.http) = {
			post: "/mpproxy/v1/kf/message/sendvoice"
			body: "*"
		};
	}
	rpc SendKFVideoMsg (SendKFVideoMsgRequest) returns (WXErrorReply) {
		option (google.api.http) = {
			post: "/mpproxy/v1/kf/message/sendvideo"
			body: "*"
		};
	}
	rpc SendKFMusicMsg (SendKFMusicMsgRequest) returns (WXErrorReply) {
		option (google.api.http) = {
			post: "/mpproxy/v1/kf/message/sendmusic"
			body: "*"
		};
	}
	rpc SendKFNewsCardMsg (SendKFNewsCardMsgRequest) returns (WXErrorReply) {
		option (google.api.http) = {
			post: "/mpproxy/v1/kf/message/sendnews"
			body: "*"
		};
	}
	rpc SendKFNewsPageMsg (SendKFNewsPageMsgRequest) returns (WXErrorReply) {
		option (google.api.http) = {
			post: "/mpproxy/v1/kf/message/sendnewspage"
			body: "*"
		};
	}
	rpc SendKFToArticleMsg (SendKFToArticleMsgRequest) returns (WXErrorReply) {
		option (google.api.http) = {
			post: "/mpproxy/v1/kf/message/sendtoarticle"
			body: "*"
		};
	}
	rpc SendKFMenuMsg (SendKFMenuMsgRequest) returns (WXErrorReply) {
		option (google.api.http) = {
			post: "/mpproxy/v1/kf/message/sendmenu"
			body: "*"
		};
	}
	rpc SendKFCardMsg (SendKFCardMsgRequest) returns (WXErrorReply) {
		option (google.api.http) = {
			post: "/mpproxy/v1/kf/message/sendcard"
			body: "*"
		};
	}
	rpc SendKFMiniProgramMsg (SendKFMiniProgramMsgRequest) returns (WXErrorReply) {
		option (google.api.http) = {
			post: "/mpproxy/v1/kf/message/sendmp"
			body: "*"
		};
	}
  rpc BlockMember (BlockMemberReq) returns (WXErrorReply) {}
  rpc UnBlockMember (BlockMemberReq) returns (WXErrorReply) {}
  rpc GetBlacklist (GetBlacklistReq) returns (GetBlacklistReply) {}
}

message GetBlacklistReq {
	string AccessToken = 1;
  string NextOpenid = 2;
}

message GetBlacklistReply {
	int64 Total = 1;
	int64 Count = 2;
	repeated string OpenIDs = 3;
	string NextOpenid = 4;
}

message BlockMemberReq {
	string AccessToken = 1;
	repeated string OpenIds = 2;
}

message SendKFMiniProgramMsgRequest {
	message KFMiniProgramMsg {
		string Title = 1;
		string PagePath = 2;
		string ThumbMediaId = 3;
		string AppId = 4;
	}
	string AccessToken = 1;
	string Type = 2;
	KFMessageCommon Common = 3;
	KFMiniProgramMsg MiniProgramPage = 4;
}

message SendKFCardMsgRequest {
	message KFCardMsg {
		string CardId = 1;
	}
	string AccessToken = 1;
	string Type = 2;
	KFMessageCommon Common = 3;
	KFCardMsg WxCard = 4;
}

message SendKFMenuMsgRequest {
	message Item {
		string Id = 1;
		string Content = 2;
	}
	message MenuMsg {
		string HeadContent = 1;
		repeated Item List = 2;
		string TailContent = 3;
	}
	KFMessageCommon Common = 1;
	MenuMsg MsgMenu = 2;
	string AccessToken = 3;
	string Type = 4;
}

message SendKFToArticleMsgRequest {
	message ToArticleMsg {
		string ArticleId = 1;
	}
	string AccessToken = 1;
	string Type = 2;
	KFMessageCommon Common = 3;
	ToArticleMsg MpNewsArticle = 4;
}

message SendKFNewsPageMsgRequest {
	message KFNewsPageMsg {
		string MediaId = 1;
	}
	string AccessToken = 1;
	string Type = 2;
	KFMessageCommon Common = 3;
	KFNewsPageMsg MpNews = 4;
}

message SendKFNewsCardMsgRequest {
	message KFNewsCardMsg {
		string Title = 1;
		string Description = 2;
		string Url = 3;
		string PicUrl = 4;
	}
	string AccessToken = 1;
	string Type = 2;
	KFMessageCommon Common = 3;
	KFNewsCardMsg News = 4;
}

message SendKFMusicMsgRequest {
	message KFMusicMsg {
		string MusicUrl = 1;
		string HQMusicUrl = 2;
		string ThumbMediaId = 3;
		string Title = 4;
		string Description = 5;
	}
	string AccessToken = 1;
	string Type = 2;
	KFMessageCommon Common = 3;
	KFMusicMsg Music = 4;
}

message SendKFVideoMsgRequest {
	message KFVideoMsg {
		string MediaId = 1;
		string ThumbMediaId = 2;
		string Title = 3;
		string Description = 4;
	}
	string AccessToken = 1;
	string Type = 2;
	KFMessageCommon Common = 3;
	KFVideoMsg Video = 4;
}

message SendKFVoiceMsgRequest {
	message KFVoiceMsg {
		string MediaId = 1;
	}
	string AccessToken = 1;
	string Type = 2;
	KFMessageCommon Common = 3;
	KFVoiceMsg Voice = 4;
}

message SendKFImageMsgRequest {
	message KFImageMsg {
		string MediaId = 1;
	}
	string AccessToken = 1;
	string Type = 2;
	KFMessageCommon Common = 3;
	KFImageMsg Image = 4;
}

message KFMessageCommon {
	message KFAccount {
		string KfAccount = 1;
	}
	string ToUser = 1;
	string MsgType = 2;
	KFAccount CustomerService = 3;
}

message SendKFTextMsgRequest {
	message KFTextMsg {
		string Content = 1;
	}
	string AccessToken = 1;
	string Type = 2;
	KFMessageCommon Common = 3;
	KFTextMsg Text = 4;
}

message NewKFSessionRequest {
	string AccessToken = 1;
	string OpenId = 2;
	string KfAccount = 3;
}

message CloseKFSessionRequest {
	string AccessToken = 1;
	string OpenId = 2;
	string KfAccount = 3;
}

message GetKFSessionUnacceptedReply {
	message WaitCase {
		int64 LatestTime = 1;
		string OpenId = 2;
	}
	int64 Count = 1;
	repeated WaitCase WaitCaseList = 2;
}

message GetKFSessionStatusReply {
	string KfAccount = 1;
	int64 CreateTime = 2;
}

message GetKFSessionStatusRequest {
	string AccessToken = 1;
	string OpenId = 2;
}

message GetKFSessionListReply {
	repeated KFSession SessionList = 1;
}

message KFSession {
	string OpenId = 1;
	int64 CreateTime = 2;
}

message GetKFSessionListRequest {
	string AccessToken = 1;
	string KfAccount = 2;
}

message UpdateKFTypingRequest {
	string AccessToken = 1;
	string Touser = 2;
	string Command = 3;
}

message UpdateKFAvatarRequest {
	string AccessToken = 1;
	string KfAccount = 2;
	string AvatarMediaId = 3;
}

message InviteKFWorkerRequest {
	string AccessToken = 1;
	string KfAccount = 2;
	string InviteWx = 3;
}

message DelKFAccountRequest {
	string AccessToken = 1;
	string KfAccount = 2;
}

message UpdateKFAccountRequest {
	string AccessToken = 1;
	string KfAccount = 2;
	string Nickname = 3;
	string Password = 4;
}

message AddKFAccountRequest {
	string AccessToken = 1;
	string KfAccount = 2;
	string Nickname = 3;
	string Password = 4;
}

message GetKFMsgHistoryReply {
	int64 MsgId = 1;
	int64 Number = 2;
	repeated KFMsgHistory RecordList = 3;
}

message KFMsgHistory {
	string Worker = 1;
	string OpenId = 2;
	string Text = 3;
	int64 Time = 4;
	int64 OpCode = 5;
}

message GetKFMsgHistoryRequest {
	string AccessToken = 1;
	int64 StartTime = 2;
	int64 EndTime = 3;
	int64 MsgId = 4;
	int64 Number = 5;
}

message GetKFOnlineListReply {
	repeated KFOnlineInfo KfOnlineList = 1;
}
message KFOnlineInfo {
	string KfAccount = 1;
	int64 Status = 2;
	int64 KfId = 3;
	int64 AcceptedCase = 4;
}

message GetKFListReply {
	repeated KeFuInfo KfList = 1;
}

message KeFuInfo {
	string KfAccount = 1;
	string KfNick = 2;
	string KfId = 3;
	string KfWx = 4;
	string KfHeadImgUrl = 5;
	string InviteWx = 6;
	string InviteStatus = 7;
	int64 InviteExpireTime = 8;
}

message SendSubscribeMessageRequest {
	message DataItem {
		string Value = 1;
	}

	string AccessToken = 1;
	string Touser = 2;
	string TemplateId = 3;
	string Page = 4;
	map<string, DataItem> Data = 5;
	MiniProgram Miniprogram = 6;
}

message GetSubscribePrivateTplReply {
	message Item {
		string PriTmplId = 1;
		string Title = 2;
		string Content = 3;
		string Example = 4;
		int64 Type = 5;
	}
	repeated Item Data = 1;
}

message GetSubscribeTplTitlesReply {
	message Item {
		string Tid = 1;
		string Title = 2;
		int64 Type = 3;
		string CategoryId = 4;
	}
	int64 Count = 1;
	repeated Item Data = 2;
}

message GetSubscribeTplTitlesRequest {
	string AccessToken = 1;
	string Ids = 2;
	int64 Limit = 3;
	int64 Start = 4;
}

message GetSubscribeTplKeywordsReply {
	message Item {
		int64 Kid = 1;
		string Name = 2;
		string Rule = 3;
		string Example = 4;
	}
	int64 Count = 1;
	repeated Item Data = 2;
}

message GetSubscribeTplKeywordsRequest {
	string AccessToken = 1;
	string TemplateId = 2;
}

message GetSubscribeCategoryReply {
	message Category {
		string Id = 1;
		string Name = 2;
	}
	repeated Category Data = 1;
}

message DelSubscribeTplRequest {
	string AccessToken = 1;
	string TemplateId = 2;
}

message AddSubscribeTplRequest {
	string AccessToken = 1;
	string Tid = 2;
	string SceneDesc = 3;
	repeated int64 KidList = 4;
}

message AddSubscribeTplReply {
	string TemplateId = 1;
}

message GetBlockedTplRequest {
	string AccessToken = 1;
	string TmplMsgId = 2;
	int64 LargestId = 3;
	int64 Limit = 4;
}

message GetBlockedTplMsgReply {
	message BlockedMsgInfo {
		int64 Id = 1;
		string Openid = 2;
		string TmplMsgId = 3;
		string Title = 4;
		string Content = 5;
		int64 SendTimestamp = 6;
	}
	repeated BlockedMsgInfo Msginfo = 1;
}

message SendSubscribeMsgRequest {
	message DataItem {
		string Value = 1;
		string Color = 2;
	}

	string AccessToken = 1;
	string Touser = 2;
	string TemplateId = 3;
	string Url = 4;
	string ClientMsgId = 5;
	map<string, DataItem> Data = 6;
	MiniProgram Miniprogram = 7;
	string Scene = 8;
	string Title = 9;
}

message SendTplMsgReply {
	int64 Msgid = 1;
}

message SendTplMsgRequest {
	message DataItem {
		string Value = 1;
		string Color = 2;
	}

	string AccessToken = 1;
	string Touser = 2;
	string TemplateId = 3;
	string Url = 4;
	string ClientMsgId = 5;
	map<string, DataItem> Data = 6;
	MiniProgram Miniprogram = 7;
}

message MiniProgram {
	string Appid = 1;
	string PagePath = 2;
}

message DeleteMessageTplRequest {
	string AccessToken = 1;
	string TemplateId = 2;
}

message AddTemplateRequest {
	string AccessToken = 1;
	string TemplateIdShort = 2;
	repeated string KeywordNameList = 3;
}

message AddMessageTplReply {
	string TemplateId = 1;
}

message GetAllPrivateTplReply {
	message TplInfo {
		string TemplateId = 1;
		string Title = 2;
		string Content = 3;
		string Example = 4;
		string PrimaryIndustry = 5;
		string SecondaryIndustry = 6;
	}
	repeated TplInfo TemplateList = 1;
}

message SetIndustryRequest {
	string AccessToken = 1;
	string IndustryId1 = 2;
	string IndustryId2 = 3;
}

message GetIndustryReply {
	message Industry {
		string FirstClass = 1;
		string SecondClass = 2;
	}

	Industry PrimaryIndustry = 1;
	Industry SecondaryIndustry = 2;
}

message DeleteConditionalMenuRequest {
	string AccessToken = 1;
	int64 Menuid = 2;
}

message CreateMenuRequest {
	string AccessToken = 1;
	repeated MenuButton Button = 2;
	ConditionalMatchRule Matchrule = 3;
}

message SelfMenuReply {
	message MenuInfoType {
		repeated SelfMenuButton Button = 1;
	}
	int64 IsMenuOpen = 1;
	MenuInfoType SelfmenuInfo = 2;
}

message SelfMenuButton {
	message SubButtonType {
		repeated SelfMenuButton List = 1;
	}
	message NewsButtonType {
		repeated NewsButton List = 1;
	}
	string Type = 1;
	string Name = 2;
	string Key = 3;
	string Url = 4;
	string Value = 5;
	SubButtonType SubButton = 10;
	NewsButtonType NewsInfo = 11;
}

message NewsButton {
	string Title = 1;
	string Author = 2;
	string Digest = 3;
	string CoverUrl = 4;
	string ContentUrl = 5;
	string SourceUrl = 6;
	int64 ShowCover = 7;
}

message TryMatchMenuRequest {
	string AccessToken = 1;
	string UserId = 2;
}

message TryMatchMenuReply {
	repeated MenuButton Button = 1;
}

message MenuInfoReply {
	message MenuType {
		int64 Menuid = 1;
		repeated MenuButton Button = 2;
	}
	MenuType Menu = 1;
	repeated ConditionalMenu Conditionalmenu = 2;
}

message MenuButton {
	string Type = 1;
	string Name = 2;
	string Key = 3;
	string Url = 4;
	string MediaId = 5;
	string AppId = 6;
	string PagePath = 7;

	repeated MenuButton SubButton = 10;
}

message ConditionalMenu {
	int64 Menuid = 1;
	repeated MenuButton Button = 2;
	ConditionalMatchRule Matchrule = 3;
}

message ConditionalMatchRule {
	string TagId = 1;
	string ClientPlatformType = 2;
}

message FetchShortenRequest {
	string ShortKey = 1;
	string AccessToken = 2;
}

message FetchShortenReply {
	string LongData = 1;
	int64 CreateTime = 2;
	int64 ExpireSeconds = 3;
}

message GenShortenRequest {
	string AccessToken = 1;
	string LongData = 2;
	int64 ExpireSeconds = 3;
}

message GenShortenReply {
	string ShortKey = 1;
}

message CreateQRCodeReply {
	string Ticket = 1;
	int64 ExpireSeconds = 2;
	string URL = 3;
}

message CreateQRCodeRequest {
	string AccessToken = 1;
	int64 ExpireSeconds = 2;
	string Scene = 3;
}

message BatchUnTaggingMembersRequest {
	string AccessToken = 1;
	int64 Id = 2;
	repeated string OpenidList = 3;
}

message BatchTaggingMembersRequest {
	string AccessToken = 1;
	int64 Id = 2;
	repeated string OpenidList = 3;
}

message GetTagMembersReply {
	int64 Count = 1;
	string NextOpenid = 2;
	message DataT {
		repeated string Openid = 1;
	}
	DataT Data = 3;
}

message GetTagMembersRequest {
	string AccessToken = 1;
	int64 Id = 2;
	string NextOpenid = 3;
}

message DeleteTagRequest {
	string AccessToken = 1;
	int64 Id = 2;
}

message UpdateTagRequest {
	string AccessToken = 1;
	int64 Id = 2;
	string Name = 3;
}

message CreateTagRequest {
	string AccessToken = 1;
	string Name = 2;
}

message CreateTagReply {
	Tag tag = 1;
}

message GetTagListReply {
	repeated Tag Tags = 1;
}

message Tag {
	int64 Id = 1;
	string Name = 2;
	int64 Count = 3;
}

message UpdateMemberRemarkRequest {
	string AccessToken = 1;
	string Openid = 2;
	string Remark = 3;
}

message WXErrorReply {
	int64 Errcode = 1;
	string Errmsg = 2;
}

message GetMemberTagsRequest {
	string AccessToken = 1;
	string Openid = 2;
}

message GetMemberTagsReply {
	repeated int64 TagidList = 1;
}

message BatchGetMemberInfoRequest {
	string AccessToken = 1;

	message OpenIdList {
		string Openid = 1;
	}
	repeated OpenIdList UserList = 2;
}

message BatchGetMemberInfoReply {
	repeated GetMemberInfoReply UserListInfo = 1;
}

message GetMemberInfoRequest {
	string AccessToken = 1;
	string Openid = 2;
	string Lang = 3;
}

message GetMemberInfoReply {
	int64 Subscribe = 1;
	string Openid = 2;
	int64 SubscribeTime = 4;
	string Unionid = 5;
	string Remark = 6;
	int64 Groupid = 7;
	repeated int64 TagidList = 8;
	string SubscribeScene = 9;
	int64 QrScene = 10;
	string QrSceneStr = 11;
	string Language = 12;
}

message GetMemberListRequest {
	string AccessToken = 1;
	string NextOpenid = 2;
}

message GetMemberListReply {
	int64 Total = 1;
	int64 Count = 2;
	string NextOpenid = 3;
	message IdList {
		repeated OpenIdList openid = 1;
	}
	IdList Data = 4;
}

message OpenIdList {
	string Openid = 1;
}

message AccessTokenParam {
	string AccessToken = 1;
}

message GetMaterialCountReply {
	int64 voiceCount = 1;
	int64 videoCount = 2;
	int64 imageCount = 3;
	int64 newsCount = 4;
}

message GetMaterialListRequest {
	string AccessToken = 1;
	string Type = 2;
	int64 Offset = 3;
	int64 Count = 4;
}

message GetMaterialListReply {
	int64 TotalCount = 1;
	int64 ItemCount = 2;
	repeated MaterialItem Item = 3;
}

message MaterialItem {
	string MediaId = 1;
	string Name = 2;
	string Url = 3;
	int64 UpdateTime = 4;
}
